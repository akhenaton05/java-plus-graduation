version: '3.8'
services:
  discovery-server:
    image: eureka-server
    build: infra/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  config-server:
    image: config-server
    build: infra/config-server
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-server:8761/eureka
      SPRING_APPLICATION_NAME: config-server
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - app-network

  stats-server:
    build: stats/stats-server
    container_name: stats-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://stats-db:5432/ewm-stats
      SPRING_DATASOURCE_USERNAME: stat
      SPRING_DATASOURCE_PASSWORD: stat
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
      SPRING_APPLICATION_NAME: stats-server
    depends_on:
      stats-db:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - app-network

  stats-db:
    image: postgres:16.1
    container_name: stats-db
    ports:
      - "6542:5432"
    environment:
      POSTGRES_USER: stat
      POSTGRES_PASSWORD: stat
      POSTGRES_DB: ewm-stats
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 5s
      retries: 10
      timeout: 5s
    volumes:
      - stats_db_data:/var/lib/postgresql/data # Добавляем том для stats-db
    networks:
      - app-network

  ewm-service:
    build: core/ewm-service
    container_name: ewm-service
    environment:
      CLIENT_URL: http://stats-server:9090
      SPRING_DATASOURCE_URL: jdbc:postgresql://ewm-db:5432/ewm-database
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      ewm-db:
        condition: service_healthy
    networks:
      - app-network

  ewm-db:
    container_name: ewm-db
    image: postgres:16.1
    ports:
      - "6543:5432"
    environment:
      POSTGRES_DB: ewm-database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 5s
      retries: 10
      timeout: 5s
    volumes:
      - ewm_db_data:/var/lib/postgresql/data # Добавляем том для ewm-db
    networks:
      - app-network

  gateway-server:
    build: infra/gateway-server
    container_name: gateway-server
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  ewm_db_data: # Определяем том для ewm-db
  stats_db_data: # Определяем том для stats-db